// src/components/courses/CourseSidebar/CourseSidebar.module.scss

// Base theme class with variables
.themeWrapper {
  // Light theme (default)
  --primary-color: #3b83f6;
  --primary-hover: #2563eb;
  --error-color: #ef4444;
  --sidebar-bg: #ffffff;
  --text-primary: #1a1a1a;
  --text-secondary: #666666;
  --border-color: #e5e7eb;
  --button-bg: #f3f4f6;
  --button-hover: #e5e7eb;
  --button-text: #1a1a1a;
  --shadow-color: rgba(0, 0, 0, 0.1);
}

// Dark theme modifier
.dark {
  --sidebar-bg: rgb(25, 25, 28);
  --text-primary: #ffffff;
  --text-secondary: #a0a0a0;
  --border-color: #2d2d2d;
  --button-bg: #2d2d2d;
  --button-hover: #404040;
  --button-text: #ffffff;
  --shadow-color: rgba(0, 0, 0, 0.3);
}

// Mixins
@mixin mobile {
  @media (max-width: 768px) {
    @content;
  }
}

@mixin tablet {
  @media (max-width: 1024px) {
    @content;
  }
}

// Component Styles
.sidebar {
  composes: themeWrapper;
  position: relative;
  padding: 1.5rem;
  border-radius: 0.75rem;
  background-color: var(--sidebar-bg);
  border: 1px solid var(--border-color);
  box-shadow: 0 4px 12px var(--shadow-color);
  transition: all 0.3s ease;

  @include mobile {
    padding: 1rem;
  }
}

// Rest of your existing styles remain the same...

.preview {
  position: relative;
  margin-bottom: 1.5rem;
  border-radius: 0.75rem;
  overflow: hidden;
  aspect-ratio: 16/9;

  &Image {
    width: 100%;
    height: 100%;
    object-fit: cover;
    transition: transform 0.3s ease;

    &:hover {
      transform: scale(1.05);
    }
  }

  .playIcon {
    position: absolute;
    left: 50%;
    top: 50%;
    transform: translate(-50%, -50%);
    color: white;
    opacity: 0.8;
    cursor: pointer;
    transition: opacity 0.3s ease, transform 0.3s ease;

    &:hover {
      opacity: 1;
      transform: translate(-50%, -50%) scale(1.1);
    }
  }
}

.pricing {
  margin-bottom: 1.5rem;
  text-align: center;

  .price {
    font-size: 1.5rem;
    font-weight: bold;
    color: var(--text-primary);
  }
}

.actions {
  margin-bottom: 1.5rem;

  .enrollButton {
    width: 100%;
    padding: 0.75rem 1rem;
    border-radius: 0.5rem;
    background-color: var(--primary-color);
    color: white;
    font-weight: 600;
    display: flex;
    align-items: center;
    justify-content: center;
    gap: 0.5rem;
    transition: background-color 0.3s ease;

    &:hover:not(:disabled) {
      background-color: var(--primary-hover);
    }

    &:disabled {
      opacity: 0.5;
      cursor: not-allowed;
    }
  }

  .error {
    margin-top: 0.5rem;
    color: var(--error-color);
    font-size: 0.875rem;
  }
}

.secondaryActions {
  display: grid;
  grid-template-columns: 1fr 1fr;
  gap: 0.75rem;
  margin-top: 1rem;

  .actionButton {
    padding: 0.5rem 1rem;
    border-radius: 0.5rem;
    background-color: var(--button-bg);
    color: var(--button-text);
    border: 1px solid var(--border-color);
    display: flex;
    align-items: center;
    justify-content: center;
    gap: 0.5rem;
    transition: all 0.3s ease;

    &:hover {
      background-color: var(--button-hover);
      border-color: var(--primary-color);
    }

    .icon {
      width: 1.25rem;
      height: 1.25rem;
    }
  }
}

.info {
  margin-top: 1.5rem;
  padding-top: 1.5rem;
  border-top: 1px solid var(--border-color);

  .infoItem {
    display: flex;
    justify-content: space-between;
    align-items: center;
    margin-bottom: 0.75rem;

    &:last-child {
      margin-bottom: 0;
    }

    .label {
      color: var(--text-secondary);
      font-size: 0.875rem;
    }

    .value {
      color: var(--text-primary);
      font-weight: 500;
    }
  }
}

.guarantee {
  margin-top: 1.5rem;
  padding-top: 1.5rem;
  border-top: 1px solid var(--border-color);
  text-align: center;

  p {
    color: var(--text-secondary);
    font-size: 0.875rem;
    margin-bottom: 0.5rem;

    &:last-child {
      margin-bottom: 0;
    }
  }
}

// RTL Support
[dir="rtl"] {
  .icon {
    transform: rotate(180deg);
  }

  .secondaryActions {
    .actionButton {
      flex-direction: row-reverse;
    }
  }
}

// Animation classes
.fadeIn {
  animation: fadeIn 0.3s ease;
}

@keyframes fadeIn {
  from {
    opacity: 0;
    transform: translateY(10px);
  }
  to {
    opacity: 1;
    transform: translateY(0);
  }
}